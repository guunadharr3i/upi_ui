name: Build and Upload Flutter Web WAR to pCloud by Tag

on:
  push:
    tags:
      - '*-v*.*.*'  # Matches uat-v1.0.0, cug-v1.2.3, prod-v2.0.0
  workflow_dispatch:
    inputs:
      env_name:
        description: 'Git Tag to build and deploy (e.g., uat-v1.0.0)'
        required: true
        type: string

permissions:
  contents: write  # Needed for creating GitHub releases

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      env_name: ${{ steps.set_env.outputs.env_name }}

    steps:
      - name: Extract Environment from Tag
        id: extract_env
        run: |
          TAG_NAME="${GITHUB_REF##*/}"
          ENV_PREFIX="${TAG_NAME%%-*}"
          echo "env_prefix=$ENV_PREFIX" >> $GITHUB_OUTPUT

      - name: Set GitHub Environment
        id: set_env
        run: |
          PREFIX=${{ steps.extract_env.outputs.env_prefix }}
          ENV_NAME=$(echo $PREFIX | tr '[:lower:]' '[:upper:]')
          echo "env_name=$ENV_NAME" >> $GITHUB_OUTPUT

      - name: Setup Environment Context
        run: echo "Selected environment is ${{ steps.set_env.outputs.env_name }}"

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: ${{ needs.build.outputs.env_name }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: refs/tags/${{ inputs.tag_name }}

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.4'

      - name: Get Dependencies
        run: flutter pub get

      - name: Build Flutter Web App
        run: flutter build web --web-renderer html

      - name: Create WAR File from Flutter Web Build
        run: |
          cd build/web
          zip -r ../../UPIUI.war .
          cd ../..

      - name: Upload WAR to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: UPIUI.war
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install rclone
        run: |
          curl https://rclone.org/install.sh | sudo bash

      - name: Configure rclone for pCloud
        env:
          RCLONE_PCLOUD_TOKEN_JSON: ${{ secrets.RCLONE_PCLOUD_TOKEN_JSON }}
        run: |
          mkdir -p ~/.config/rclone
          echo "[Pcloud]" > ~/.config/rclone/rclone.conf
          echo "type = pcloud" >> ~/.config/rclone/rclone.conf
          echo "token = ${RCLONE_PCLOUD_TOKEN_JSON}" >> ~/.config/rclone/rclone.conf



      - name: Upload WAR to pCloud
        run: |
          ENV=${{ needs.build.outputs.env_name }}
          TARGET_DIR="Pcloud:/GitHubFlutterBuilds/$ENV"
          rclone mkdir "$TARGET_DIR"
          rclone copy UPIUI.war "$TARGET_DIR" --progress+